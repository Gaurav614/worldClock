
import java.util.Arrays;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Locale;
import java.util.Map;
import java.util.Set;
import java.util.TimeZone;
import javax.swing.DefaultListModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author gaurav
 */
public class displayCountry extends javax.swing.JFrame {

    /**
     * Creates new form displayCountry
     *
     */
    
     String selectedCountry[];
     String zoneid[];
     String country;
     String code;

    public displayCountry() {
        getAvailableTimeZones();
        initComponents();

    }

    public displayCountry(String country,String code) {
      // selectedCountry=new String[2];
        this.country = country;
        this.code=code;
        getAvailableTimeZones();
        initComponents();
        
        
        //getCountry();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        disList = new javax.swing.JList<>(selectedCountry);
        label1 = new java.awt.Label();
        back = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocationByPlatform(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        disList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        disList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                disListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(disList);

        label1.setAlignment(java.awt.Label.CENTER);
        label1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        label1.setFont(new java.awt.Font("Arial Black", 1, 36)); // NOI18N
        label1.setText("World Clock");

        back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-go-back-26.png"))); // NOI18N
        back.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(back)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(back)
                .addGap(21, 21, 21)
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 348, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 350, 520));

        setSize(new java.awt.Dimension(362, 546));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void disListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_disListMouseClicked
        // TODO add your handling code here:
        String k=disList.getSelectedValue().toString();
        int i=disList.getSelectedIndex();
        new clock(zoneid[i]).setVisible(true);
       
        
        
        
        
        
        
        
        
        
    }//GEN-LAST:event_disListMouseClicked

    private void backMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backMouseClicked
        // TODO add your handling code here:
        this.dispose();
        new Countries().setVisible(true);
    }//GEN-LAST:event_backMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(displayCountry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(displayCountry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(displayCountry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(displayCountry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
 /* java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new displayCountry().setVisible(true);
            }
        });
         */
    }
    
    public void getAvailableTimeZones(){
        
        
        Map<String, Set<TimeZone>> availableTimezones =

new HashMap<String, Set<TimeZone>>();

 

// Loop through all available locales

 

for (String locale : Locale.getISOCountries())

{
Locale obj=new Locale("",locale);
final String countryCode = obj.getCountry();

 

// Locate the timezones added for this country so far

// (This can be moved to inside the loop if depending

// on whether country with no available timezones should

// be in the result map with an empty set,

// or not included at all)

 

Set<TimeZone> timezones = availableTimezones.get(countryCode);

if (timezones==null)

{

timezones = new HashSet<TimeZone>();

availableTimezones.put(countryCode, timezones);

}

 

// Find all timezones for that country (code) using ICU4J

 

for (String id :

com.ibm.icu.util.TimeZone.getAvailableIDs(countryCode))

{

// Add timezone to result map
 

timezones.add(TimeZone.getTimeZone(id));

}

}
//System.out.println(availableTimezones.get("US"));
//Object keys[]=availableTimezones.keySet();
//Arrays.sort(keys);
//for(Object i:keys)
//{  
  //  System.out.println(i+"--->");

        selectedCountry=new String[availableTimezones.get(code).size()];
        zoneid=new String[availableTimezones.get(code).size()];
        
        int temp=0;
  for(TimeZone k:availableTimezones.get(code))
{
   
        
        String temp1=k.getID();
        zoneid[temp]=temp1;
        if(temp1.indexOf("/")>=0)
            selectedCountry[temp++]=format(temp1);
    
    //selectedCountry[temp++]=k.getID();
       // System.out.println(k.getID()+"---->>" +LocalTime.now(zoneid1));

}
//}
//System.out.println(keys.);

    }
    public String format(String st){
        
        String nst[]=st.split("/");
        
        
    return nst[nst.length-1];
    }
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel back;
    protected javax.swing.JList<String> disList;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private java.awt.Label label1;
    // End of variables declaration//GEN-END:variables
}
